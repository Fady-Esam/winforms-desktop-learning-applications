<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPLSURBVHhe7ZjfS1NhGMe98MIL77zwTxAEQRC88sKFSLWiGFGEFwPpJqJBhCBedNHFAnNUGBnR
        RTeRSV6NGDmUhOEPsEBMArPNMHOMMjc219ymPu/LU+x5fKeJZzs77/ED34u+5/ue834fbOdHFdBucylN
        O0lp2klK006ixq7m8L4gamBOW3hfEDUwpy28L4gamJPE4/Evi4uLb6ws0QHrSHhfEDUwJxEn4MetJtEB
        60gUGWpgTnIygJMBHDyAurq6jsuA0+l0qY5XgkoyAIfDcWFpacmfy+VSGN3d2tr6MT4+/rC6utqhWmOW
        DB+Ay+W6BGWjGNnHyspKsJKGYPgAYrHYBzxclLGxMR9fZ5YMHUBPT083HjqQZDL5rXCdmTJ0AIFA4D4e
        OpTm5uazhWvNkqEDCAaDD/DQoXR2dl4sXGuWDB3A4ODgLTx0IJlM5nfhOjNl6ABqa2tPpVKp73i4KPPz
        868K15kpQwcgNDAwcHNnZyeLkX0kEolwU1NTRfz/FzJ8AEL9/f03xC89xv6xurr6vq2t7bxqjVkqyQCE
        ampqHF6v97rf7/eOjo7e7erquqLKma2SDcAqOhmArgNobGw8o/K5tBuA+K1ZW1sL5fP5DOxvRLyZqnJ/
        pc0AxLeHqampp/AK/ge3J4F/p+G542Vra+s51TotBiCePeD5IoLbUpLNZpNzc3Mv+DOIpQcg/rzD4XAA
        t/NfbG9vx6enp581NDScFuew5ADEBxXx5gllEriVIwPvI78mJycfiy9XaEkU16MG5iRmDKC3t7d7Y2Pj
        E27BcBTXpAbmJOUcgLitLSwsvIb3jDxeviQork0NzEnKNYDh4eE76XQ6hpctKYrrUwNzklIPwO12X11f
        X5/By5UFxT6ogTlJqQZQX1/fMTs7+xweZsg9vRwo9kMNzEmMGIB4gOnr67sGb4334HwjsVjs43F+3Y+L
        Yo/UwJzkqAMQ9+2hoaHboVDoSSQSeRePx7/Cj1oOT1cRKPZNDcxJig1AfBrzeDxu8R1APIZGo9EZuO/+
        xGUVjaIPNTAnEQNoaWlx+nw+z8TExKPl5eW3m5ubn8WLCEYsB+8LogbmJFYuWgzeF0QNzGkL7wuiBua0
        hfcFUQNz2sL7gqiBOW3hfUHUwJy28L4gamBOW3hfEDUwpy28L4gamNMW3hdEDcxpC+8LogbmtIX3BVED
        c9rC+4KogTlt4X1B1MCctvC+IGpgTlt4XxA1MKctvC+IGpjTFt4XRA3MaQvvC6IG5rSF9wVRA3PawvuC
        9hl2k9K0k5SmnaQ0baKq9j2PPvuLMLhZjQAAAABJRU5ErkJggg==
</value>
  </data>
</root>